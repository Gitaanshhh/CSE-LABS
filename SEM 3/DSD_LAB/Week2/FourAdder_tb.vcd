$date
	Wed Aug 14 14:07:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module FourAdder_tb $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % cout $end
$var reg 1 & cin $end
$var reg 1 ' x0 $end
$var reg 1 ( x1 $end
$var reg 1 ) x2 $end
$var reg 1 * x3 $end
$var reg 1 + y0 $end
$var reg 1 , y1 $end
$var reg 1 - y2 $end
$var reg 1 . y3 $end
$scope module l $end
$var wire 1 & cin $end
$var wire 1 ' x0 $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + y0 $end
$var wire 1 , y1 $end
$var wire 1 - y2 $end
$var wire 1 . y3 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % cout $end
$var wire 1 / c3 $end
$var wire 1 0 c2 $end
$var wire 1 1 c1 $end
$scope module stage0 $end
$var wire 1 + cin $end
$var wire 1 & x $end
$var wire 1 ' y $end
$var reg 1 1 cout $end
$var reg 1 $ s $end
$upscope $end
$scope module stage1 $end
$var wire 1 , cin $end
$var wire 1 1 x $end
$var wire 1 ( y $end
$var reg 1 0 cout $end
$var reg 1 # s $end
$upscope $end
$scope module stage2 $end
$var wire 1 - cin $end
$var wire 1 0 x $end
$var wire 1 ) y $end
$var reg 1 / cout $end
$var reg 1 " s $end
$upscope $end
$scope module stage3 $end
$var wire 1 . cin $end
$var wire 1 / x $end
$var wire 1 * y $end
$var reg 1 % cout $end
$var reg 1 ! s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1'
0&
1%
0$
1#
1"
1!
$end
#20
1$
1&
#40
0%
0/
00
01
0.
0+
0)
0(
0&
#60
1%
0!
1/
0"
10
0#
11
0$
1&
#80
