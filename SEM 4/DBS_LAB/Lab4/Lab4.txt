-- 1. Create Employee table --

create table employee (
EmpNo number(3) primary key,
EmpName varchar(25) not null,
Gender char(1) not null check (Gender = 'M' or Gender = 'F'),
Salary numeric(10,2) not null,
Address varchar(40) not null,
DNo number(3));

-- 2. Create Department table --

create table Department (
DeptNo number(3) primary key,
DeptName varchar(25) unique not null,
Location varchar(25));

-- 3. Make DNo of Employee as foreign key which refers to DeptNo of Department --

ALTER TABLE Employee ADD CONSTRAINT FKey_DNo FOREIGN KEY(DNo) REFERENCES  Department(DeptNo);

/* 4. Insert few tuples into Employee and Department which satisfies the above constraints. */

insert into department values(1,'Software','Coimbatore');
insert into department values(2,'Legal','Coimbatore');
insert into department values(3,'Customer Service','Manipal');

insert into employee values(1, 'Gitaansh','M', 1000000, 'Manipal',1);
insert into employee values(2, 'Maana','F', 2000000, 'Pune',2);
insert into employee values(3, 'Shak','M', 2000000, 'Coimbatore',1);

/* 5. Try to insert few tuples into Employee and Department which violates some of the 
above constraints */

insert into employee values(4, 'Emp','-', 2000000, 'Coimbatore',1);
insert into employee values(4, 'Emp','F', 1000000, 'Mangalore',6);
insert into employee values(1, 'Emp','F', 3000000, 'Mumbai',3);

-- 6. Try to modify/delete a tuple which violates a constraint. --

delete from department where deptno = 1;

/* 7. Modify the foreign key constraint of Employee table such that whenever a department tuple is deleted, the employees belonging to that department will also be deleted. */

alter table employee drop constraint Fkey_DNo;
alter table employee add constraint Fkey_Dno Foreign Key(DNo) references department(deptno) on delete cascade;

/* 8. Create a named constraint to set the default salary to 10000 and test the constraint by inserting a new record. */

alter table employee modify(salary default 10000);
insert into employee values(4, 'Emp','M', default, 'Mumbai',3);


-- University Database Schema : --
-- Make tables using university.sql --
-- Insert values using smallRelations.sql -- 

-- 9. List all Students with names and their department names --

select name, dept_name from student;

-- 10. List all instructors in CSE department. --

select name from instructor where dept_name = 'CSE';

-- 11. Find the names of courses in CSE department which have 3 credits --

select title from course where dept_name = 'CSE' and credits = 3;

/* 12. For a student show all course-id and title of all courses registered for by the student. */

select course_id,title from course where course_id in (select course_id from takes where id = 1);

-- 13. List all the instructors whose salary is in between 40000 and 90000. --

select name from instructor where salary > 40000 and salary < 90000;

-- 14. Display the IDs of all instructors who have never taught a course. --

select id from instructor where id not in (select id from teaches);

/* 15. Find the student names, course names, and the year, for all students those who have attended classes in room-number 303. */

select distinct s.name, c.title, sec.year from student s, course c, section sec, takes ta where s.id = ta.id and ta.course_id = sec.course_id and ta.sec_id = sec.sec_id and sec.room_number = 303;

SELECT DISTINCT student.name AS student_name, course.title AS course_name, section.year AS year FROM student 
JOIN takes ON student.ID = takes.ID
JOIN section ON takes.course_id = section.course_id AND takes.sec_id = section.sec_id AND takes.semester = section.semester AND takes.year = section.year
JOIN course ON section.course_id = course.course_id
JOIN classroom ON section.building = classroom.building AND section.room_number = classroom.room_number
WHERE classroom.room_number = '303';


/* 16. For all students who have opted courses in 2015, find their names and course id’s with the attribute course title replaced by c-name */


/* 17. Find the names of all instructors whose salary is greater than the salary of at least one instructor of CSE department and salary replaced by inst-salary */


/* 18. Find the names of all instructors whose department name includes the substring 
‘ch’. */


-- 19. List the student names along with the length of the student names. --
select name,length(name) len from student;

/* 20. List the department names and 3 characters from 3rd position of each department name */


-- 21. List the instructor names in upper case. --


-- 22. Replace NULL with value1(say 0) for a column in any of the table --


-- 23. Display the salary and salary/3 rounded to nearest hundred from Instructor --


/* 24. Display the birth date of all the employees in the following format:
 ‘DD-MON-YYYY’
 ‘DD-MON-YY’
 ‘DD-MM-YY’ */

/* 25. List the employee names and the year (fully spelled out) in which they are born
 ‘YEAR’
 ‘Year’
 ‘year’ */ 