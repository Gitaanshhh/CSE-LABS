-- 1.  Find the number of students in each course --
select course_id, count(ID) count from takes group by course_id;  

/* 2. Find those departments where the average number of students are greater than 10. */
select dept_name, count(ID) from student group by dept_name having count(ID) > 10;

-- 3. Find the total number of courses in each department. --
select dept_name, count(course_id) count from course group by dept_name;

/* 4. Find the names and average salaries of all departments whose average salary is greater than 42000. */
select dept_name, AVG(salary) from instructor group by dept_name having AVG(salary) > 42000;

-- 5. Find the enrolment of each section that was offered in Spring 2009. --
select sec_id, course_id, count(ID) from takes where year = 2009 and semester = 'Spring' group by sec_id, course_id;

/* 6. List all the courses with prerequisite courses, then display course id in increasing order. */
select course_id, title from course where course_id in ( select course_id from prereq) order by course_id;

-- 7. Display the details of instructors sorting the salary in decreasing order. --
select * from instructor order by salary desc;

-- 8. Find the maximum total salary across the departments. --
select max(s) from (select sum(salary) s from instructor group by dept_name);

/* 9. Find the average instructors’ salaries of those departments where the average 
salary is greater than 42000. */
select dept_name, AVG(salary) from instructor group by dept_name having AVG(salary)>42000;

-- 10. Find the sections that had the maximum enrolment in Spring 2010 --
SELECT sec_id, course_id, COUNT(ID) FROM takes WHERE year = 2010 AND semester = 'Spring' GROUP BY sec_id,course_id HAVING COUNT(ID) = (SELECT MAX(c) FROM (SELECT sec_id, COUNT(ID) c FROM takes WHERE year = 2010 AND semester = 'Spring' GROUP BY sec_id,course_id));

 /* 11. Find the names of all instructors who teach all students that belong to ‘CSE’ Department */
select name from instructor where ID in (select ID from teaches where sec_id in (select sec_id from takes where ID in (select id from student where dept_name='Comp. Sci.')));

/* 12. Find the average salary of those department where the average salary is greater than 50000 and total number of instructors in the department are more than 2. */
select dept_name, avg(salary) from instructor group by dept_name having avg(salary) > 50000 and count(ID) > 2;

-- 13. Find all departments with the maximum budget. --
select dept_name from department where budget in (select max(budget) from department); 

-- OR --
with m(budget) AS (select MAX(budget) from department) select d.dept_name, d.budget FROM department d,m WHERE d.budget = m.budget;

/* 14. Find all departments where the total salary is greater than the average of the total salary at all departments */
with tempTable(salary) as (select AVG(salary) from (select SUM(salary) salary from instructor group by dept_name)) select dept_name, sum(salary) from instructor group by dept_name having sum(salary) > (select salary from tempTable);

-- 15. Transfer all the students from CSE department to IT department. --
update student set dept_name='IT' where dept_name='Comp. Sci.';

/* 16. Increase salaries of instructors whose salary is over $100,000 by 3%, and all others receive a 5% raise */
update instructor set salary = 1.03*salary where salary > 100000 and set salary = 1.05*salary where salary < 100000;

--  --

/*  */
